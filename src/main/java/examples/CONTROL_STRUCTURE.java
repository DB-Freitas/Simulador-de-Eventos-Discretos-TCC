package examples;
//
//Automatically generated by XACDML
//

import simula.manager.*;
public class CONTROL_STRUCTURE
{
    public static void main (String args[])
    {
        System.out.println("\nGeracao de CONTROL_STRUCTURE atraves de Simulation Manager");
        SimulationManager man= new SimulationManager();

        QueueEntry qe;//queues
        ResourceEntry re;//resource queues
        ExternalActiveEntry eae;//generator and detroy
        InternalActiveEntry iae;//activivity and router
        InterruptActiveEntry intae;//interrupts
        ObserverEntry oe;
        HistogramEntry he;

        //queues and observer queues


        qe = new QueueEntry();
        qe.SetId("Q_1");//mapped by dead id
        qe.setObsid("Q_1_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_2");//mapped by dead id
        qe.setObsid("Q_2_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_3");//mapped by dead id
        qe.setObsid("Q_3_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_4");//mapped by dead id
        qe.setObsid("Q_4_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_5");//mapped by dead id
        qe.setObsid("Q_5_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_6");//mapped by dead id
        qe.setObsid("Q_6_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_7");//mapped by dead id
        qe.setObsid("Q_7_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_8");//mapped by dead id
        qe.setObsid("Q_8_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_9");//mapped by dead id
        qe.setObsid("Q_9_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_10");//mapped by dead id
        qe.setObsid("Q_10_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_11");//mapped by dead id
        qe.setObsid("Q_11_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("Q_12");//mapped by dead id
        qe.setObsid("Q_12_OBS");//observer
        man.AddQueue(qe);


        qe = new QueueEntry();
        qe.SetId("OUT");//mapped by dead id
        qe.setObsid("OUT_OBS");//observer
        man.AddQueue(qe);

        //active states

        //externals (generates and destroys)

        eae = new ExternalActiveEntry(true); //generate
        eae.SetId("GENERATE_CA"); //mapped by generate id
        eae.setQID("Q_8"); // mapped by next dead
        eae.setServiceDist( ActiveEntry.CONST);// mapped by stat type
        eae.setDistP1((int)1.0);// mapped by parm1
        man.AddActiveState(eae);

        eae = new ExternalActiveEntry(true); //generate
        eae.SetId("GENERATE_API_DATA"); //mapped by generate id
        eae.setQID("Q_9"); // mapped by next dead
        eae.setServiceDist( ActiveEntry.CONST);// mapped by stat type
        eae.setDistP1((int)1);// mapped by parm1
        man.AddActiveState(eae);

        eae = new ExternalActiveEntry(true); //generate
        eae.SetId("GENERATE_VEHICLES"); //mapped by generate id
        eae.setQID("Q_1"); // mapped by next dead
        eae.setServiceDist( ActiveEntry.CONST);// mapped by stat type
        eae.setDistP1((int)5);// mapped by parm1
        man.AddActiveState(eae);

        eae = new ExternalActiveEntry(false); //destroy
        eae.SetId( "DESTROY_OUT"); //mapped by destroy id
        eae.setQID( "OUT"); // mapped by prev dead
        man.AddActiveState(eae);


        //internals (activities and routers)


        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "A_1"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1(3);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_10");// mapped by next dead
        iae.addFromQueue("Q_8");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "A_2"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1(0.5f);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_11");// mapped by next dead
        iae.addFromQueue("Q_9");// mapped by prev dead
        iae.addToQueue("Q_11");// mapped by next dead
        iae.addFromQueue("Q_10");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "A_3"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)1);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_12");// mapped by next dead
        iae.addFromQueue("Q_11");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_3"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)1.0);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_2");// mapped by next dead
        iae.addFromQueue("Q_1");// mapped by prev dead
        iae.addFromQueue("Q_12");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_4"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)1);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_3");// mapped by next dead
        iae.addFromQueue("Q_2");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_5"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)1);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_4");// mapped by next dead
        iae.addFromQueue("Q_3");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_6"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)1);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_5");// mapped by next dead
        iae.addFromQueue("Q_4");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_7"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)2);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_6");// mapped by next dead
        iae.addFromQueue("Q_5");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_2"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)3);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("Q_7");// mapped by next dead
        iae.addFromQueue("Q_12");// mapped by prev dead
        man.AddActiveState(iae);

        iae = new InternalActiveEntry(true); //isn't router
        iae.SetId( "FB_1"); //mapped by act id
        iae.setServiceDist(ActiveEntry.CONST);// mapped by stat type
        iae.setDistP1((int)5);// mapped by parm1
        iae.addCond("true");
        iae.addToQueue("OUT");// mapped by next dead
        iae.addFromQueue("Q_6");// mapped by prev dead
        iae.addFromQueue("Q_7");// mapped by prev dead
        man.AddActiveState(iae);


        //observers


        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_1");//observer queue
        oe.SetId("Q_1_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_2");//observer queue
        oe.SetId("Q_2_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_3");//observer queue
        oe.SetId("Q_3_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_4");//observer queue
        oe.SetId("Q_4_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_5");//observer queue
        oe.SetId("Q_5_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_6");//observer queue
        oe.SetId("Q_6_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_7");//observer queue
        oe.SetId("Q_7_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_8");//observer queue
        oe.SetId("Q_8_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_9");//observer queue
        oe.SetId("Q_9_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_10");//observer queue
        oe.SetId("Q_10_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_11");//observer queue
        oe.SetId("Q_11_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"Q_12");//observer queue
        oe.SetId("Q_12_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.QUEUE,"OUT");//observer queue
        oe.SetId("OUT_OBS");
        man.AddObserver(oe);

        oe= new ObserverEntry(ObserverEntry.ACTIVE,"GENERATE_CA");
        oe.SetId("GENERATE_CA_OBS");
        man.AddObserver(oe);

        eae = (ExternalActiveEntry)man.GetActiveState("GENERATE_CA");
        eae.setObsid("GENERATE_CA_OBS");

        oe= new ObserverEntry(ObserverEntry.ACTIVE,"GENERATE_API_DATA");
        oe.SetId("GENERATE_API_DATA_OBS");
        man.AddObserver(oe);

        eae = (ExternalActiveEntry)man.GetActiveState("GENERATE_API_DATA");
        eae.setObsid("GENERATE_API_DATA_OBS");

        oe= new ObserverEntry(ObserverEntry.ACTIVE,"GENERATE_VEHICLES");
        oe.SetId("GENERATE_VEHICLES_OBS");
        man.AddObserver(oe);

        eae = (ExternalActiveEntry)man.GetActiveState("GENERATE_VEHICLES");
        eae.setObsid("GENERATE_VEHICLES_OBS");


        //generate the model

        if (man.GenerateModel())
            System.out.println("\nModel successfuly generated!");
        else
        {
            System.out.println("\nThere was an errors during the model generation!");
            System.out.println("Exiting...");
            return;
        }

        //start the simulation

        System.out.println("Starting the simulation. Simulation wil run unitl time=500");

        man.ExecuteSimulation(500);

        while (!man.Finished())
        {
            try
            {
                Thread.sleep(1000);
            }
            catch(InterruptedException e) {break;}
        }

        System.out.println("Simulation Stopped!");

        //finally, output the results

        man.OutputSimulationResults ("CONTROL_STRUCTURE.out");


        System.out.println("\nThat's all folks!");
    }
}